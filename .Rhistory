bind_rows(us_subgroup_urates) %>%
#merge quarterly laus unemp estimates
left_join(quarterly_laus) %>%
mutate(qtr_st_urate_by_reg = ratio * laus_qtr_unemp,
se = (sqrt(subgroup_urate*(1-subgroup_urate)/n)),
cv = se / subgroup_urate) %>%
# replace all values with a coefficient of variation below threshold to NA
mutate(thresh.10 = replace(qtr_st_urate_by_reg, cv>.10, NA),
thresh.15 = replace(qtr_st_urate_by_reg, cv>.15, NA),
thresh.20 = replace(qtr_st_urate_by_reg, cv>.20, NA),
thresh.25 = replace(qtr_st_urate_by_reg, cv>.25, NA)) %>%
left_join(state_labels) %>%
select(state, st_abbr, gender, wbhao, n, subgroup_urate,
st_urate_6mos, ratio, laus_qtr_unemp, qtr_st_urate_by_reg,
se, cv, thresh.10:thresh.25) %>% # Clean our data up
mutate(wbhao = replace_na(wbhao, 'All'),
gender = replace_na(gender, 'All'),
qtr = paste(qtr_list[1],'+',qtr_list[i+1])) %>%
filter(wbhao!='Other')
laus_dfs[[i]] <- quarterly_laus
output_dfs[[i]] <- curr_output # save your dataframes into the list
}
return(laus_dfs)
return(output_dfs)
}
qtr_list <- c('2019 Q4','2020 Q1', '2020 Q2', '2020 Q3', '2020 Q4', '2021 Q1', '2021 Q2',
'2021 Q3', '2021 Q4')
my_dfs <- qtly_analysis(qtr_list)
rm(laus_dfs, output_dfs)
#empty lists to store dfs
output_dfs <- list()
laus_dfs <- list()
qtly_analysis <- function(quarters){
for(i in 1:length(qtr_list)){
quarterly_laus <- laus %>%
filter(qtr==qtr_list[i+1]) %>%
group_by(st_abbr) %>%
summarize(laus_qtr_unemp = mean(urate))
state_urates <- cps %>%
filter(qtr==qtr_list[i] | qtr == qtr_list[i+1]) %>%
group_by(st_abbr) %>%
summarize(st_urate_6mos = weighted.mean(unemp, w=basicwgt/6, na.rm=TRUE))
us_subgroup_urates <- cps %>%
filter(qtr==qtr_list[i] | qtr==qtr_list[i+1]) %>%
mutate(overall= paste('US','-','All','-','All'),
gender = paste('US','-','All','-',female),
race = paste('US','-',wbhao,'-','All'),
genderXrace = paste('US','-',wbhao,'-',female)) %>%
summarize_groups(overall|race|gender|genderXrace,
subgroup_urate = weighted.mean(unemp, w=basicwgt/6, na.rm=TRUE),
n=n()) %>%
separate(group_value, c('st_abbr','wbhao','gender')) %>% #creates st_abbr, wbho, gender variables
mutate(st_urate_6mos = subgroup_urate[1],
st_abbr = 'US',
ratio = subgroup_urate/st_urate_6mos)
all_subgroup_urates<- cps %>%
#restrict data to current quarters
filter(qtr==qtr_list[i] | qtr==qtr_list[i+1]) %>%
#create subgroup variables
mutate(stateXrace = paste(st_abbr,'-', wbhao,'-','All'),
stateXgender = paste(st_abbr,'-','All','-',female),
stXraceXgender = paste(st_abbr,'-',wbhao,'-',female)) %>%
#Estimate unemployment rates and sample sizes by subgroups
summarize_groups(st_abbr|stateXrace|stXraceXgender|stateXgender,
subgroup_urate = weighted.mean(unemp, w=basicwgt/6, na.rm=TRUE),
n=n()) %>%
#split group_value variable to create st_abbr, wbho, gender labels
separate(group_value, c('st_abbr','wbhao','gender')) %>%
#merge statefips labels by st_abbr to get fips codes and CPS estimated urates
left_join(state_urates) %>%
#get ratio of (6-month state avg:subgroup) unemployment rate
mutate(ratio = subgroup_urate/st_urate_6mos) %>%
arrange(st_abbr, desc(n)) %>%
#bind US unemployment rates
bind_rows(us_subgroup_urates) %>%
#merge quarterly laus unemp estimates
left_join(quarterly_laus) %>%
mutate(qtr_st_urate_by_reg = ratio * laus_qtr_unemp,
se = (sqrt(subgroup_urate*(1-subgroup_urate)/n)),
cv = se / subgroup_urate) %>%
# replace all values with a coefficient of variation below threshold to NA
mutate(thresh.10 = replace(qtr_st_urate_by_reg, cv>.10, NA),
thresh.15 = replace(qtr_st_urate_by_reg, cv>.15, NA),
thresh.20 = replace(qtr_st_urate_by_reg, cv>.20, NA),
thresh.25 = replace(qtr_st_urate_by_reg, cv>.25, NA)) %>%
left_join(state_labels) %>%
select(state, st_abbr, gender, wbhao, n, subgroup_urate,
st_urate_6mos, ratio, laus_qtr_unemp, qtr_st_urate_by_reg,
se, cv, thresh.10:thresh.25) %>% # Clean our data up
mutate(wbhao = replace_na(wbhao, 'All'),
gender = replace_na(gender, 'All'),
qtr = paste(qtr_list[1],'+',qtr_list[i+1])) %>%
filter(wbhao!='Other')
laus_dfs[[i]] <- quarterly_laus
output_dfs[[i]] <- all_subgroup_urates # save your dataframes into the list
}
return(laus_dfs)
return(output_dfs)
}
qtr_list <- c('2019 Q4','2020 Q1', '2020 Q2', '2020 Q3', '2020 Q4', '2021 Q1', '2021 Q2',
'2021 Q3', '2021 Q4')
my_dfs <- qtly_analysis(qtr_list)
all_qtrs <- bind_rows(my_dfs)
View(all_qtrs)
#empty lists to store dfs
output_dfs <- list()
laus_dfs <- list()
qtly_analysis <- function(quarters){
for(i in 1:length(qtr_list)){
quarterly_laus <- laus %>%
filter(qtr==qtr_list[i+1]) %>%
group_by(st_abbr) %>%
summarize(laus_qtr_unemp = mean(urate))
state_urates <- cps %>%
filter(qtr==qtr_list[i] | qtr == qtr_list[i+1]) %>%
group_by(st_abbr) %>%
summarize(st_urate_6mos = weighted.mean(unemp, w=basicwgt/6, na.rm=TRUE))
us_subgroup_urates <- cps %>%
filter(qtr==qtr_list[i] | qtr==qtr_list[i+1]) %>%
mutate(overall= paste('US','-','All','-','All'),
gender = paste('US','-','All','-',female),
race = paste('US','-',wbhao,'-','All'),
genderXrace = paste('US','-',wbhao,'-',female)) %>%
summarize_groups(overall|race|gender|genderXrace,
subgroup_urate = weighted.mean(unemp, w=basicwgt/6, na.rm=TRUE),
n=n()) %>%
separate(group_value, c('st_abbr','wbhao','gender')) %>% #creates st_abbr, wbho, gender variables
mutate(st_urate_6mos = subgroup_urate[1],
st_abbr = 'US',
ratio = subgroup_urate/st_urate_6mos)
all_subgroup_urates<- cps %>%
#restrict data to current quarters
filter(qtr==qtr_list[i] | qtr==qtr_list[i+1]) %>%
#create subgroup variables
mutate(stateXrace = paste(st_abbr,'-', wbhao,'-','All'),
stateXgender = paste(st_abbr,'-','All','-',female),
stXraceXgender = paste(st_abbr,'-',wbhao,'-',female)) %>%
#Estimate unemployment rates and sample sizes by subgroups
summarize_groups(st_abbr|stateXrace|stXraceXgender|stateXgender,
subgroup_urate = weighted.mean(unemp, w=basicwgt/6, na.rm=TRUE),
n=n()) %>%
#split group_value variable to create st_abbr, wbho, gender labels
separate(group_value, c('st_abbr','wbhao','gender')) %>%
#merge statefips labels by st_abbr to get fips codes and CPS estimated urates
left_join(state_urates) %>%
#get ratio of (6-month state avg:subgroup) unemployment rate
mutate(ratio = subgroup_urate/st_urate_6mos) %>%
arrange(st_abbr, desc(n)) %>%
#bind US unemployment rates
bind_rows(us_subgroup_urates) %>%
#merge quarterly laus unemp estimates
left_join(quarterly_laus) %>%
mutate(qtr_st_urate_by_reg = ratio * laus_qtr_unemp,
se = (sqrt(subgroup_urate*(1-subgroup_urate)/n)),
cv = se / subgroup_urate) %>%
# replace all values with a coefficient of variation below threshold to NA
mutate(thresh.10 = replace(qtr_st_urate_by_reg, cv>.10, NA),
thresh.15 = replace(qtr_st_urate_by_reg, cv>.15, NA),
thresh.20 = replace(qtr_st_urate_by_reg, cv>.20, NA),
thresh.25 = replace(qtr_st_urate_by_reg, cv>.25, NA)) %>%
left_join(state_labels) %>%
select(state, st_abbr, gender, wbhao, n, subgroup_urate,
st_urate_6mos, ratio, laus_qtr_unemp, qtr_st_urate_by_reg,
se, cv, thresh.10:thresh.25) %>% # Clean our data up
mutate(wbhao = replace_na(wbhao, 'All'),
gender = replace_na(gender, 'All'),
qtr = paste(qtr_list[1],'+',qtr_list[i+1])) %>%
filter(wbhao!='Other')
output_dfs[[i]] <- all_subgroup_urates # save your dataframes into the list
}
return(output_dfs)
}
qtr_list <- c('2019 Q4','2020 Q1', '2020 Q2', '2020 Q3', '2020 Q4', '2021 Q1', '2021 Q2',
'2021 Q3', '2021 Q4')
my_dfs <- qtly_analysis(qtr_list)
all_qtrs <- bind_rows(my_dfs)
View(my_dfs)
View(all_qtrs)
#empty lists to store dfs
output_dfs <- list()
qtly_analysis <- function(quarters){
for(i in 1:length(qtr_list)){
quarterly_laus <- laus %>%
filter(qtr==qtr_list[i+1]) %>%
group_by(st_abbr) %>%
summarize(laus_qtr_unemp = mean(urate))
state_urates <- cps %>%
filter(qtr==qtr_list[i] | qtr == qtr_list[i+1]) %>%
group_by(st_abbr) %>%
summarize(st_urate_6mos = weighted.mean(unemp, w=basicwgt/6, na.rm=TRUE))
us_subgroup_urates <- cps %>%
filter(qtr==qtr_list[i] | qtr==qtr_list[i+1]) %>%
mutate(overall= paste('US','-','All','-','All'),
gender = paste('US','-','All','-',female),
race = paste('US','-',wbhao,'-','All'),
genderXrace = paste('US','-',wbhao,'-',female)) %>%
summarize_groups(overall|race|gender|genderXrace,
subgroup_urate = weighted.mean(unemp, w=basicwgt/6, na.rm=TRUE),
n=n()) %>%
separate(group_value, c('st_abbr','wbhao','gender')) %>% #creates st_abbr, wbho, gender variables
mutate(st_urate_6mos = subgroup_urate[1],
st_abbr = 'US',
ratio = subgroup_urate/st_urate_6mos)
all_subgroup_urates<- cps %>%
#restrict data to current quarters
filter(qtr==qtr_list[i] | qtr==qtr_list[i+1]) %>%
#create subgroup variables
mutate(stateXrace = paste(st_abbr,'-', wbhao,'-','All'),
stateXgender = paste(st_abbr,'-','All','-',female),
stXraceXgender = paste(st_abbr,'-',wbhao,'-',female)) %>%
#Estimate unemployment rates and sample sizes by subgroups
summarize_groups(st_abbr|stateXrace|stXraceXgender|stateXgender,
subgroup_urate = weighted.mean(unemp, w=basicwgt/6, na.rm=TRUE),
n=n()) %>%
#split group_value variable to create st_abbr, wbho, gender labels
separate(group_value, c('st_abbr','wbhao','gender')) %>%
#merge statefips labels by st_abbr to get fips codes and CPS estimated urates
left_join(state_urates) %>%
#get ratio of (6-month state avg:subgroup) unemployment rate
mutate(ratio = subgroup_urate/st_urate_6mos) %>%
arrange(st_abbr, desc(n)) %>%
#bind US unemployment rates
bind_rows(us_subgroup_urates) %>%
#merge quarterly laus unemp estimates
left_join(quarterly_laus) %>%
mutate(qtr_st_urate_by_reg = ratio * laus_qtr_unemp,
se = (sqrt(subgroup_urate*(1-subgroup_urate)/n)),
cv = se / subgroup_urate) %>%
# replace all values with a coefficient of variation below threshold to NA
mutate(thresh.10 = replace(qtr_st_urate_by_reg, cv>.10, NA),
thresh.15 = replace(qtr_st_urate_by_reg, cv>.15, NA),
thresh.20 = replace(qtr_st_urate_by_reg, cv>.20, NA),
thresh.25 = replace(qtr_st_urate_by_reg, cv>.25, NA)) %>%
left_join(state_labels) %>%
select(state, st_abbr, gender, wbhao, n, subgroup_urate,
st_urate_6mos, ratio, laus_qtr_unemp, qtr_st_urate_by_reg,
se, cv, thresh.10:thresh.25) %>% # Clean our data up
mutate(wbhao = replace_na(wbhao, 'All'),
gender = replace_na(gender, 'All'),
grp_qtrs = paste(qtr_list[1],'+',qtr_list[i+1]),
qtr = paste(qtr_list[i+1])) %>%
filter(wbhao!='Other')
output_dfs[[i]] <- all_subgroup_urates # save your dataframes into the list
}
return(output_dfs)
}
qtr_list <- c('2019 Q4','2020 Q1', '2020 Q2', '2020 Q3', '2020 Q4', '2021 Q1', '2021 Q2',
'2021 Q3', '2021 Q4')
my_dfs <- qtly_analysis(qtr_list)
all_qtrs <- bind_rows(my_dfs)
View(all_qtrs)
ref_qtr <- all_qtrs %>%
filter(qtr=='2020 Q1')
View(ref_qtr)
state_urates <- all_qtrs %>%
filter(gender == 'All')
View(state_urates)
state_urates <- all_qtrs %>%
filter(gender == 'All', wbhao!='All') %>%
select(qtr, state, wbhao, qtr_st_urate_by_reg)
View(state_urates)
state_urates <- all_qtrs %>%
filter(gender == 'All', wbhao!='All') %>%
select(qtr, state, wbhao, qtr_st_urate_by_reg) %>%
pivot_wider(id_cols = state, names_from = c(qtr, wbhao), values_from = qtr_st_urate_by_reg)
state_urates <- all_qtrs %>%
filter(gender == 'All', wbhao!='All') %>%
select(qtr, state, wbhao, qtr_st_urate_by_reg) %>%
pivot_wider(id_cols = c(state,wbhao), names_from = c(qtr), values_from = qtr_st_urate_by_reg)
ref_qtr <- all_qtrs %>%
filter(qtr=='2020 Q1')
state_urates <- all_qtrs %>%
filter(gender == 'All', wbhao!='All') %>%
select(qtr, state, wbhao, qtr_st_urate_by_reg) %>%
pivot_wider(id_cols = c(state,wbhao), names_from = c(qtr), values_from = qtr_st_urate_by_reg) %>%
select(-NA) %>%
write_csv(here(paste0('/data/state_urates',format(Sys.time(), "%d-%b-%Y %H.%M"),'.csv')))
state_urates <- all_qtrs %>%
filter(gender == 'All', wbhao!='All') %>%
select(qtr, state, wbhao, qtr_st_urate_by_reg) %>%
pivot_wider(id_cols = c(state,wbhao), names_from = c(qtr), values_from = qtr_st_urate_by_reg)# %>%
select(-'NA') %>%
write_csv(here(paste0('/data/state_urates',format(Sys.time(), "%d-%b-%Y %H.%M"),'.csv')))
names(state_urates)
select(-[11]) %>%
state_urates <- all_qtrs %>%
filter(gender == 'All', wbhao!='All') %>%
select(qtr, state, wbhao, qtr_st_urate_by_reg) %>%
pivot_wider(id_cols = c(state,wbhao), names_from = c(qtr), values_from = qtr_st_urate_by_reg) %>%
select(-[11]) %>%
state_urates <- all_qtrs %>%
filter(gender == 'All', wbhao!='All') %>%
select(qtr, state, wbhao, qtr_st_urate_by_reg) %>%
pivot_wider(id_cols = c(state,wbhao), names_from = c(qtr), values_from = qtr_st_urate_by_reg) %>%
select(-state_urates[11]) %>%
write_csv(here(paste0('/data/state_urates',format(Sys.time(), "%d-%b-%Y %H.%M"),'.csv')))
state_urates <- all_qtrs %>%
filter(gender == 'All', wbhao!='All') %>%
select(qtr, state, wbhao, qtr_st_urate_by_reg) %>%
pivot_wider(id_cols = c(state,wbhao), names_from = c(qtr), values_from = qtr_st_urate_by_reg) %>%
select(-state_urates[,11]) %>%
write_csv(here(paste0('/data/state_urates',format(Sys.time(), "%d-%b-%Y %H.%M"),'.csv')))
state_urates <- all_qtrs %>%
filter(gender == 'All', wbhao!='All') %>%
select(qtr, state, wbhao, qtr_st_urate_by_reg) %>%
pivot_wider(id_cols = c(state,wbhao), names_from = c(qtr), values_from = qtr_st_urate_by_reg) %>%
write_csv(here(paste0('/data/state_urates',format(Sys.time(), "%d-%b-%Y %H.%M"),'.csv')))
get(wd)
getwd()
state_urates <- all_qtrs %>%
filter(gender == 'All', wbhao!='All') %>%
select(qtr, state, wbhao, qtr_st_urate_by_reg) %>%
pivot_wider(id_cols = c(state,wbhao), names_from = c(qtr), values_from = qtr_st_urate_by_reg) %>%
write_csv(here(paste0('/data/state_urates',format(Sys.time(), "%d-%b-%Y %H.%M"),'.csv')))
state_urates <- all_qtrs %>%
filter(gender == 'All', wbhao!='All') %>%
select(qtr, state, wbhao, qtr_st_urate_by_reg) %>%
pivot_wider(id_cols = c(state,wbhao), names_from = c(qtr), values_from = qtr_st_urate_by_reg) %>%
write_csv(here(paste0('data/state_urates',format(Sys.time(), "%d-%b-%Y %H.%M"),'.csv')))
state_urates <- all_qtrs %>%
filter(gender == 'All', wbhao!='All') %>%
select(qtr, state, wbhao, qtr_st_urate_by_reg) %>%
pivot_wider(id_cols = c(state,wbhao), names_from = c(qtr), values_from = qtr_st_urate_by_reg) %>%
write_csv(here(paste0('data/state_urates_',format(Sys.time(), "%d-%b-%Y %H.%M"),'.csv')))
state_urates <- all_qtrs %>%
filter(gender == 'All', wbhao!='All') %>%
select(qtr, state, wbhao, qtr_st_urate_by_reg) %>%
pivot_wider(id_cols = c(qtr,wbhao), names_from = c(state), values_from = qtr_st_urate_by_reg) %>%
write_csv(here(paste0('data/state_urates_',format(Sys.time(), "%d-%b-%Y %H.%M"),'.csv')))
count(cps$qtr)
count(cps, qtr)
unique(cps$qtr)
qtr_list <- c(unique(cps$qtr))
qtr_list
#Use EPI extractr to load CPS Basic. See more at https://github.com/Economic/epiextractr
cps <-load_basic(2012:year(Sys.time()), year, month, basicwgt, age, female, wbhao, statefips, unemp, lfstat) %>%
filter(age>=16, lfstat!=3) %>%
mutate(date = as.Date(paste(year, month, 1, sep = "-"), "%Y-%m-%d")) %>%
#create quarterly date periods
mutate(qtr=as.yearqtr(date)) %>%
#merge optional labels
left_join(state_labels) %>%
mutate(across(wbhao|female, ~ as.character(haven::as_factor(.x))))
#empty lists to store dfs
output_dfs <- list()
qtly_analysis <- function(quarters){
for(i in 1:length(qtr_list)){
quarterly_laus <- laus %>%
filter(qtr==qtr_list[i+1]) %>%
group_by(st_abbr) %>%
summarize(laus_qtr_unemp = mean(urate))
state_urates <- cps %>%
filter(qtr==qtr_list[i] | qtr == qtr_list[i+1]) %>%
group_by(st_abbr) %>%
summarize(st_urate_6mos = weighted.mean(unemp, w=basicwgt/6, na.rm=TRUE))
us_subgroup_urates <- cps %>%
filter(qtr==qtr_list[i] | qtr==qtr_list[i+1]) %>%
mutate(overall= paste('US','-','All','-','All'),
gender = paste('US','-','All','-',female),
race = paste('US','-',wbhao,'-','All'),
genderXrace = paste('US','-',wbhao,'-',female)) %>%
summarize_groups(overall|race|gender|genderXrace,
subgroup_urate = weighted.mean(unemp, w=basicwgt/6, na.rm=TRUE),
n=n()) %>%
separate(group_value, c('st_abbr','wbhao','gender')) %>% #creates st_abbr, wbho, gender variables
mutate(st_urate_6mos = subgroup_urate[1],
st_abbr = 'US',
ratio = subgroup_urate/st_urate_6mos)
all_subgroup_urates<- cps %>%
#restrict data to current quarters
filter(qtr==qtr_list[i] | qtr==qtr_list[i+1]) %>%
#create subgroup variables
mutate(stateXrace = paste(st_abbr,'-', wbhao,'-','All'),
stateXgender = paste(st_abbr,'-','All','-',female),
stXraceXgender = paste(st_abbr,'-',wbhao,'-',female)) %>%
#Estimate unemployment rates and sample sizes by subgroups
summarize_groups(st_abbr|stateXrace|stXraceXgender|stateXgender,
subgroup_urate = weighted.mean(unemp, w=basicwgt/6, na.rm=TRUE),
n=n()) %>%
#split group_value variable to create st_abbr, wbho, gender labels
separate(group_value, c('st_abbr','wbhao','gender')) %>%
#merge statefips labels by st_abbr to get fips codes and CPS estimated urates
left_join(state_urates) %>%
#get ratio of (6-month state avg:subgroup) unemployment rate
mutate(ratio = subgroup_urate/st_urate_6mos) %>%
arrange(st_abbr, desc(n)) %>%
#bind US unemployment rates
bind_rows(us_subgroup_urates) %>%
#merge quarterly laus unemp estimates
left_join(quarterly_laus) %>%
mutate(qtr_st_urate_by_reg = ratio * laus_qtr_unemp,
se = (sqrt(subgroup_urate*(1-subgroup_urate)/n)),
cv = se / subgroup_urate) %>%
# replace all values with a coefficient of variation below threshold to NA
mutate(thresh.10 = replace(qtr_st_urate_by_reg, cv>.10, NA),
thresh.15 = replace(qtr_st_urate_by_reg, cv>.15, NA),
thresh.20 = replace(qtr_st_urate_by_reg, cv>.20, NA),
thresh.25 = replace(qtr_st_urate_by_reg, cv>.25, NA)) %>%
left_join(state_labels) %>%
select(state, st_abbr, gender, wbhao, n, subgroup_urate,
st_urate_6mos, ratio, laus_qtr_unemp, qtr_st_urate_by_reg,
se, cv, thresh.10:thresh.25) %>% # Clean our data up
mutate(wbhao = replace_na(wbhao, 'All'),
gender = replace_na(gender, 'All'),
grp_qtrs = paste(qtr_list[1],'+',qtr_list[i+1]),
qtr = paste(qtr_list[i+1])) %>%
filter(wbhao!='Other')
output_dfs[[i]] <- all_subgroup_urates # save your dataframes into the list
}
return(output_dfs)
}
qtr_list <- c(unique(cps$qtr))
my_dfs <- qtly_analysis(qtr_list)
all_qtrs <- bind_rows(my_dfs)
state_urates <- all_qtrs %>%
filter(gender == 'All', wbhao!='All') %>%
select(qtr, state, wbhao, qtr_st_urate_by_reg) %>%
pivot_wider(id_cols = c(qtr,wbhao), names_from = c(state), values_from = qtr_st_urate_by_reg)# %>%
View(state_urates)
state_urates <- all_qtrs %>%
filter(gender == 'All', wbhao!='All') %>%
select(qtr, state, wbhao, qtr_st_urate_by_reg) %>%
pivot_wider(id_cols = c(qtr,wbhao), names_from = c(state), values_from = qtr_st_urate_by_reg) %>%
arrange(wbhao)
state_urates <- all_qtrs %>%
filter(gender == 'All', wbhao!='All') %>%
select(qtr, state, wbhao, qtr_st_urate_by_reg) %>%
pivot_wider(id_cols = c(qtr,wbhao), names_from = c(state), values_from = qtr_st_urate_by_reg) %>%
filter(qtr!=NA)
state_urates <- all_qtrs %>%
filter(gender == 'All', wbhao!='All') %>%
select(qtr, state, wbhao, qtr_st_urate_by_reg) %>%
pivot_wider(id_cols = c(qtr,wbhao), names_from = c(state), values_from = qtr_st_urate_by_reg)# %>%
filter(qtr!='NA')
state_urates <- all_qtrs %>%
filter(gender == 'All', wbhao!='All') %>%
select(qtr, state, wbhao, qtr_st_urate_by_reg) %>%
pivot_wider(id_cols = c(qtr,wbhao), names_from = c(state), values_from = qtr_st_urate_by_reg) %>%
filter(qtr!='NA')
state_urates <- all_qtrs %>%
filter(gender == 'All', wbhao!='All') %>%
select(qtr, state, wbhao, qtr_st_urate_by_reg) %>%
pivot_wider(id_cols = c(qtr,wbhao), names_from = c(state), values_from = qtr_st_urate_by_reg) %>%
filter(qtr!='NA') %>%
arrange(wbhao)
library(ggplot2)
state_urates %>%
ggplot( aes(x=qtr, y=n, group=wbhao, color=wbhao)) +
geom_line()
state_urates %>%
ggplot(aes(x=qtr, y=c(Alaska:Washington), group=wbhao, color=wbhao)) +
geom_line()
View(state_urates)
state_urates <- all_qtrs %>%
filter(gender == 'All', wbhao!='All') %>%
select(qtr, state, wbhao, qtr_st_urate_by_reg) %>%
pivot_wider(id_cols = c(qtr,state), names_from = c(wbhao), values_from = qtr_st_urate_by_reg) %>%
filter(qtr!='NA') %>%
arrange(wbhao)
state_urates <- all_qtrs %>%
filter(gender == 'All', wbhao!='All') %>%
select(qtr, state, wbhao, qtr_st_urate_by_reg) %>%
pivot_wider(id_cols = c(qtr,state), names_from = c(wbhao), values_from = qtr_st_urate_by_reg)# %>%
filter(White!='NA') %>%
arrange(wbhao)
state_urates <- all_qtrs %>%
filter(gender == 'All', wbhao!='All') %>%
select(qtr, state, wbhao, qtr_st_urate_by_reg) %>%
pivot_wider(id_cols = c(qtr,state), names_from = c(wbhao), values_from = qtr_st_urate_by_reg) %>%
filter(White!='NA') %>%
arrange(wbhao)
state_urates <- all_qtrs %>%
filter(gender == 'All', wbhao!='All') %>%
select(qtr, state, wbhao, qtr_st_urate_by_reg) %>%
pivot_wider(id_cols = c(qtr,state), names_from = c(wbhao), values_from = qtr_st_urate_by_reg) %>%
filter(White!='NA') %>%
arrange(state)
state_urates %>%
ggplot(aes(x=qtr, y=c(White), group=state, color=state)) +
geom_line()
state_urates %>%
ggplot(aes(x=qtr, y=c(White), group=state, color=c(White, Black, Hispanic, Asian))) +
geom_line()
state_urates <- all_qtrs %>%
filter(gender == 'All', wbhao!='All') %>%
select(qtr, state, wbhao, qtr_st_urate_by_reg) %>%
pivot_wider(id_cols = c(qtr,wbhao), names_from = c(state), values_from = qtr_st_urate_by_reg) %>%
filter(qtr!='NA') %>%
arrange(wbhao)
state_urates <- all_qtrs %>%
filter(gender == 'All', wbhao!='All') %>%
select(qtr, state, wbhao, qtr_st_urate_by_reg) %>%
pivot_wider(id_cols = c(qtr), names_from = c(state, wbhao), values_from = qtr_st_urate_by_reg) %>%
filter(qtr!='NA') %>%
arrange(wbhao)
state_urates <- all_qtrs %>%
filter(gender == 'All', wbhao!='All') %>%
select(qtr, state, wbhao, qtr_st_urate_by_reg) %>%
pivot_wider(id_cols = c(qtr), names_from = c(state, wbhao), values_from = qtr_st_urate_by_reg)# %>%
state_urates <- all_qtrs %>%
filter(gender == 'All', wbhao!='All') %>%
select(qtr, state, wbhao, qtr_st_urate_by_reg) %>%
pivot_wider(id_cols = c(qtr), names_from = c(state, wbhao), values_from = qtr_st_urate_by_reg) %>%
filter(qtr!='NA') %>%
arrange(wbhao) %>%
relocate(contains('Asian', 'Black', 'Hispanic'), .before=contains('White'))
state_urates <- all_qtrs %>%
filter(gender == 'All', wbhao!='All') %>%
select(qtr, state, wbhao, qtr_st_urate_by_reg) %>%
pivot_wider(id_cols = c(qtr), names_from = c(state, wbhao), values_from = qtr_st_urate_by_reg) %>%
filter(qtr!='NA') %>%
relocate(contains('Asian', 'Black', 'Hispanic'), .before=contains('White'))
