summarize_groups(overall|race|gender|genderXrace,
subgroup_urate = weighted.mean(unemp, w=basicwgt/6, na.rm=TRUE),
n=n()) %>%
separate(group_value, c('div_label','wbhao','gender'), sep= ' - ') %>% #creates st_abbr, wbho, gender variables
mutate(across(wbhao|gender, ~ str_squish(.x)),
div_urate_6mos = subgroup_urate[1],
div_label = "US",
ratio = ifelse(subgroup_urate==0, NA, subgroup_urate/div_urate_6mos))
all_subgroup_urates<- cps %>%
#restrict data to current quarters
filter(qtr==qtr_list[1] | qtr==qtr_list[1+1]) %>%
#create subgroup variables
mutate(divXrace = paste(div_label,'-', wbhao,'-','All'),
divXgender = paste(div_label,'-','All','-',female),
divXraceXgender = paste(div_label,'-',wbhao,'-',female)) %>%
#Estimate unemployment rates and sample sizes by subgroups
summarize_groups(div_label|divXrace|divXraceXgender|divXgender,
subgroup_urate = weighted.mean(unemp, w=basicwgt/6, na.rm=TRUE),
n=n()) %>%
#split group_value variable to create st_abbr, wbho, gender labels
separate(group_value, c('div_label','wbhao','gender'), sep = ' - ') %>%
#merge statefips labels by st_abbr to get fips codes and CPS estimated urates
left_join(cps_div_urates) %>%
#get ratio of (6-month state avg:subgroup) unemployment rate
#NOTE: due to small sample sizes, occasionally subgroups show an unemployment rate of 0%
#Using ifelse() fcuntion, I avoid using these 0 values as a divisor.
mutate(ratio = ifelse(subgroup_urate==0, NA, subgroup_urate/div_urate_6mos)) %>%
arrange(div_label, desc(n)) %>%
#bind US unemployment rates
bind_rows(us_subgroup_urates) %>%
#merge quarterly laus unemp estimates
left_join(laus_div_urates) %>%
mutate(qtr_div_urate_by_reg = ratio * laus_qtr_unemp,
se = ifelse(subgroup_urate==0, NA, sqrt(subgroup_urate*(1-subgroup_urate)/n)),
cv = ifelse(subgroup_urate==0, NA, se / subgroup_urate)) %>%
# replace all values with a coefficient of variation below threshold to NA
mutate(thresh.10 = replace(qtr_div_urate_by_reg, cv>.10, NA),
thresh.15 = replace(qtr_div_urate_by_reg, cv>.15, NA),
thresh.20 = replace(qtr_div_urate_by_reg, cv>.20, NA),
thresh.25 = replace(qtr_div_urate_by_reg, cv>.25, NA)) %>%
left_join(geographic_labels)# %>%
all_subgroup_urates<- cps %>%
#restrict data to current quarters
filter(qtr==qtr_list[1] | qtr==qtr_list[1+1]) %>%
#create subgroup variables
mutate(divXrace = paste(div_label,'-', wbhao,'-','All'),
divXgender = paste(div_label,'-','All','-',female),
divXraceXgender = paste(div_label,'-',wbhao,'-',female)) %>%
#Estimate unemployment rates and sample sizes by subgroups
summarize_groups(div_label|divXrace|divXraceXgender|divXgender,
subgroup_urate = weighted.mean(unemp, w=basicwgt/6, na.rm=TRUE),
n=n()) %>%
#split group_value variable to create st_abbr, wbho, gender labels
separate(group_value, c('div_label','wbhao','gender'), sep = ' - ') %>%
#merge statefips labels by st_abbr to get fips codes and CPS estimated urates
left_join(cps_div_urates) %>%
#get ratio of (6-month state avg:subgroup) unemployment rate
#NOTE: due to small sample sizes, occasionally subgroups show an unemployment rate of 0%
#Using ifelse() fcuntion, I avoid using these 0 values as a divisor.
mutate(ratio = ifelse(subgroup_urate==0, NA, subgroup_urate/div_urate_6mos)) %>%
arrange(div_label, desc(n)) %>%
#bind US unemployment rates
bind_rows(us_subgroup_urates) %>%
#merge quarterly laus unemp estimates
left_join(laus_div_urates) %>%
mutate(qtr_div_urate_by_reg = ratio * laus_qtr_unemp,
se = ifelse(subgroup_urate==0, NA, sqrt(subgroup_urate*(1-subgroup_urate)/n)),
cv = ifelse(subgroup_urate==0, NA, se / subgroup_urate)) %>%
# replace all values with a coefficient of variation below threshold to NA
mutate(thresh.10 = replace(qtr_div_urate_by_reg, cv>.10, NA),
thresh.15 = replace(qtr_div_urate_by_reg, cv>.15, NA),
thresh.20 = replace(qtr_div_urate_by_reg, cv>.20, NA),
thresh.25 = replace(qtr_div_urate_by_reg, cv>.25, NA)) %>%
left_join(geographic_labels) %>%
select(div_label, gender, wbhao, n, subgroup_urate,
div_urate_6mos, ratio, laus_qtr_unemp, qtr_div_urate_by_reg,
se, cv, thresh.10:thresh.25) %>% # Clean our data up
mutate(grp_qtrs = paste(qtr_list[i],'+',qtr_list[i+1]),
qtr = paste(qtr_list[i+1])) %>%
filter(wbhao!='Other')
all_subgroup_urates<- cps %>%
#restrict data to current quarters
filter(qtr==qtr_list[1] | qtr==qtr_list[1+1]) %>%
#create subgroup variables
mutate(divXrace = paste(div_label,'-', wbhao,'-','All'),
divXgender = paste(div_label,'-','All','-',female),
divXraceXgender = paste(div_label,'-',wbhao,'-',female)) %>%
#Estimate unemployment rates and sample sizes by subgroups
summarize_groups(div_label|divXrace|divXraceXgender|divXgender,
subgroup_urate = weighted.mean(unemp, w=basicwgt/6, na.rm=TRUE),
n=n()) %>%
#split group_value variable to create st_abbr, wbho, gender labels
separate(group_value, c('div_label','wbhao','gender'), sep = ' - ') %>%
#merge statefips labels by st_abbr to get fips codes and CPS estimated urates
left_join(cps_div_urates) %>%
#get ratio of (6-month state avg:subgroup) unemployment rate
#NOTE: due to small sample sizes, occasionally subgroups show an unemployment rate of 0%
#Using ifelse() fcuntion, I avoid using these 0 values as a divisor.
mutate(ratio = ifelse(subgroup_urate==0, NA, subgroup_urate/div_urate_6mos)) %>%
arrange(div_label, desc(n)) %>%
#bind US unemployment rates
bind_rows(us_subgroup_urates) %>%
#merge quarterly laus unemp estimates
left_join(laus_div_urates) %>%
mutate(qtr_div_urate_by_reg = ratio * laus_qtr_unemp,
se = ifelse(subgroup_urate==0, NA, sqrt(subgroup_urate*(1-subgroup_urate)/n)),
cv = ifelse(subgroup_urate==0, NA, se / subgroup_urate)) %>%
# replace all values with a coefficient of variation below threshold to NA
mutate(thresh.10 = replace(qtr_div_urate_by_reg, cv>.10, NA),
thresh.15 = replace(qtr_div_urate_by_reg, cv>.15, NA),
thresh.20 = replace(qtr_div_urate_by_reg, cv>.20, NA),
thresh.25 = replace(qtr_div_urate_by_reg, cv>.25, NA)) %>%
left_join(geographic_labels) %>%
select(div_label, gender, wbhao, n, subgroup_urate,
div_urate_6mos, ratio, laus_qtr_unemp, qtr_div_urate_by_reg,
se, cv, thresh.10:thresh.25)# %>% # Clean our data up
#empty lists to store dfs
div_dfs <- list()
division_analysis <- function(quarters){
for(i in 1:length(qtr_list)){
laus_div_urates <- laus %>%
filter(qtr==qtr_list[i+1]) %>%
group_by(div_label) %>%
summarize(laus_qtr_unemp = mean(urate))
cps_div_urates <- cps %>%
filter(qtr==qtr_list[i] | qtr == qtr_list[i+1]) %>%
group_by(div_label) %>%
summarize(div_urate_6mos = weighted.mean(unemp, w=basicwgt/6, na.rm=TRUE))
us_subgroup_urates <- cps %>%
filter(qtr==qtr_list[i] | qtr==qtr_list[i+1]) %>%
mutate(overall= paste('US','-','All','-','All'),
gender = paste('US','-','All','-',female),
race = paste('US','-',wbhao,'-','All'),
genderXrace = paste('US','-',wbhao,'-',female)) %>%
summarize_groups(overall|race|gender|genderXrace,
subgroup_urate = weighted.mean(unemp, w=basicwgt/6, na.rm=TRUE),
n=n()) %>%
separate(group_value, c('div_label','wbhao','gender'), sep= ' - ') %>% #creates st_abbr, wbho, gender variables
mutate(across(wbhao|gender, ~ str_squish(.x)),
div_urate_6mos = subgroup_urate[1],
div_label = "US",
ratio = ifelse(subgroup_urate==0, NA, subgroup_urate/div_urate_6mos))
print(paste("Calculating subgroup urates for: ", qtr_list[i+1]))
all_subgroup_urates<- cps %>%
#restrict data to current quarters
filter(qtr==qtr_list[i] | qtr==qtr_list[i+1]) %>%
#create subgroup variables
mutate(divXrace = paste(div_label,'-', wbhao,'-','All'),
divXgender = paste(div_label,'-','All','-',female),
divXraceXgender = paste(div_label,'-',wbhao,'-',female)) %>%
#Estimate unemployment rates and sample sizes by subgroups
summarize_groups(div_label|divXrace|divXraceXgender|divXgender,
subgroup_urate = weighted.mean(unemp, w=basicwgt/6, na.rm=TRUE),
n=n()) %>%
#split group_value variable to create st_abbr, wbho, gender labels
separate(group_value, c('div_label','wbhao','gender'), sep = ' - ') %>%
#merge statefips labels by st_abbr to get fips codes and CPS estimated urates
left_join(cps_div_urates) %>%
#get ratio of (6-month state avg:subgroup) unemployment rate
#NOTE: due to small sample sizes, occasionally subgroups show an unemployment rate of 0%
#Using ifelse() fcuntion, I avoid using these 0 values as a divisor.
mutate(ratio = ifelse(subgroup_urate==0, NA, subgroup_urate/div_urate_6mos)) %>%
arrange(div_label, desc(n)) %>%
#bind US unemployment rates
bind_rows(us_subgroup_urates) %>%
#merge quarterly laus unemp estimates
left_join(laus_div_urates) %>%
mutate(qtr_div_urate_by_reg = ratio * laus_qtr_unemp,
se = ifelse(subgroup_urate==0, NA, sqrt(subgroup_urate*(1-subgroup_urate)/n)),
cv = ifelse(subgroup_urate==0, NA, se / subgroup_urate)) %>%
# replace all values with a coefficient of variation below threshold to NA
mutate(thresh.10 = replace(qtr_div_urate_by_reg, cv>.10, NA),
thresh.15 = replace(qtr_div_urate_by_reg, cv>.15, NA),
thresh.20 = replace(qtr_div_urate_by_reg, cv>.20, NA),
thresh.25 = replace(qtr_div_urate_by_reg, cv>.25, NA)) %>%
left_join(geographic_labels) %>%
select(div_label, gender, wbhao, n, subgroup_urate,
div_urate_6mos, ratio, laus_qtr_unemp, qtr_div_urate_by_reg,
se, cv, thresh.10:thresh.25) %>% # Clean our data up
mutate(grp_qtrs = paste(qtr_list[i],'+',qtr_list[i+1]),
qtr = paste(qtr_list[i+1])) %>%
filter(wbhao!='Other')
div_dfs[[i]] <- all_subgroup_urates # save your dataframes into the list
}
return(div_dfs)
}
#Same as above, except using divisions instead of states
my_div_dfs <- division_analysis(qtr_list)
all_qtrs_div <- bind_rows(my_div_dfs)
div_urates <- all_qtrs %>%
filter(gender == 'All', wbhao!='All') %>%
select(qtr, state, wbhao, qtr_st_urate_by_reg) %>%
arrange(wbhao) %>%
pivot_wider(id_cols = c(qtr), names_from = c(state, wbhao), values_from = qtr_st_urate_by_reg) %>%
filter(qtr!='NA') %>%
write_csv(here(paste0('data/state_urates_',format(Sys.time(), "%d-%b-%Y %H.%M"),'.csv')))
div_urates <- all_qtrs_div %>%
filter(gender == 'All', wbhao!='All') %>%
select(qtr, state, wbhao, qtr_st_urate_by_reg) %>%
arrange(wbhao) %>%
pivot_wider(id_cols = c(qtr), names_from = c(state, wbhao), values_from = qtr_st_urate_by_reg) %>%
filter(qtr!='NA') %>%
write_csv(here(paste0('data/division_urates_',format(Sys.time(), "%d-%b-%Y %H.%M"),'.csv')))
div_urates <- all_qtrs_div %>%
filter(gender == 'All', wbhao!='All') %>%
select(qtr, div_label, wbhao, qtr_st_urate_by_reg) %>%
arrange(wbhao) %>%
pivot_wider(id_cols = c(qtr), names_from = c(state, wbhao), values_from = qtr_st_urate_by_reg) %>%
filter(qtr!='NA') %>%
write_csv(here(paste0('data/division_urates_',format(Sys.time(), "%d-%b-%Y %H.%M"),'.csv')))
div_urates <- all_qtrs_div %>%
filter(gender == 'All', wbhao!='All') %>%
select(qtr, div_label, wbhao, qtr_div_urate_by_reg) %>%
arrange(wbhao) %>%
pivot_wider(id_cols = c(qtr), names_from = c(state, wbhao), values_from = qtr_st_urate_by_reg) %>%
filter(qtr!='NA') %>%
write_csv(here(paste0('data/division_urates_',format(Sys.time(), "%d-%b-%Y %H.%M"),'.csv')))
div_urates <- all_qtrs_div %>%
filter(gender == 'All', wbhao!='All') %>%
select(qtr, div_label, wbhao, qtr_div_urate_by_reg) %>%
arrange(wbhao) %>%
pivot_wider(id_cols = c(qtr), names_from = c(div_label, wbhao), values_from = qtr_st_urate_by_reg) %>%
filter(qtr!='NA') %>%
write_csv(here(paste0('data/division_urates_',format(Sys.time(), "%d-%b-%Y %H.%M"),'.csv')))
div_urates <- all_qtrs_div %>%
filter(gender == 'All', wbhao!='All') %>%
select(qtr, div_label, wbhao, qtr_div_urate_by_reg) %>%
arrange(wbhao) %>%
pivot_wider(id_cols = c(qtr), names_from = c(div_label, wbhao), values_from = qtr_div_urate_by_reg) %>%
filter(qtr!='NA') %>%
write_csv(here(paste0('data/division_urates_',format(Sys.time(), "%d-%b-%Y %H.%M"),'.csv')))
div_urates <- all_qtrs_div %>%
filter(gender == 'All', wbhao!='All') %>%
select(qtr, div_label, wbhao, qtr_div_urate_by_reg) %>%
arrange(wbhao)# %>%
View(div_urates)
div_urates <- all_qtrs_div %>%
filter(gender == 'All', wbhao!='All') %>%
select(qtr, div_label, wbhao, qtr_div_urate_by_reg) %>%
arrange(wbhao) %>%
pivot_wider(id_cols = c(qtr), names_from = c(div_label, wbhao), values_from = qtr_div_urate_by_reg)# %>%
div_urates <- all_qtrs_div %>%
filter(gender == 'All', wbhao!='All') %>%
select(qtr, div_label, wbhao, qtr_div_urate_by_reg) %>%
arrange(wbhao)# %>%
pivot_wider(id_cols = c(qtr), names_from = c(div_label, wbhao), values_from = qtr_div_urate_by_reg)# %>%
div_urates <- all_qtrs_div %>%
filter(gender == 'All', wbhao!='All') %>%
select(qtr, div_label, wbhao, qtr_div_urate_by_reg) %>%
arrange(wbhao) %>%
pivot_wider(id_cols = c(qtr), names_from = c(div_label, wbhao), values_from = qtr_div_urate_by_reg)# %>%
div_urates <- all_qtrs_div %>%
filter(gender == 'All', wbhao!='All') %>%
select(qtr, div_label, wbhao, qtr_div_urate_by_reg) %>%
arrange(wbhao)# %>%
laus_div_urates <- laus %>%
filter(qtr==qtr_list[1+1]) %>%
group_by(div_label) %>%
summarize(laus_qtr_unemp = mean(urate))
cps_div_urates <- cps %>%
filter(qtr==qtr_list[1] | qtr == qtr_list[1+1]) %>%
group_by(div_label) %>%
summarize(div_urate_6mos = weighted.mean(unemp, w=basicwgt/6, na.rm=TRUE))
View(laus_div_urates)
View(cps_div_urates)
us_subgroup_urates <- cps %>%
filter(qtr==qtr_list[1] | qtr==qtr_list[1+1]) %>%
mutate(overall= paste('US','-','All','-','All'),
gender = paste('US','-','All','-',female),
race = paste('US','-',wbhao,'-','All'),
genderXrace = paste('US','-',wbhao,'-',female)) %>%
summarize_groups(overall|race|gender|genderXrace,
subgroup_urate = weighted.mean(unemp, w=basicwgt/6, na.rm=TRUE),
n=n()) %>%
separate(group_value, c('div_label','wbhao','gender'), sep= ' - ') %>% #creates st_abbr, wbho, gender variables
mutate(across(wbhao|gender, ~ str_squish(.x)),
div_urate_6mos = subgroup_urate[1],
div_label = "US",
ratio = ifelse(subgroup_urate==0, NA, subgroup_urate/div_urate_6mos))
View(us_subgroup_urates)
all_subgroup_urates<- cps %>%
#restrict data to current quarters
filter(qtr==qtr_list[1] | qtr==qtr_list[1+1]) %>%
#create subgroup variables
mutate(divXrace = paste(div_label,'-', wbhao,'-','All'),
divXgender = paste(div_label,'-','All','-',female),
divXraceXgender = paste(div_label,'-',wbhao,'-',female)) %>%
#Estimate unemployment rates and sample sizes by subgroups
summarize_groups(div_label|divXrace|divXraceXgender|divXgender,
subgroup_urate = weighted.mean(unemp, w=basicwgt/6, na.rm=TRUE),
n=n()) %>%
#split group_value variable to create st_abbr, wbho, gender labels
separate(group_value, c('div_label','wbhao','gender'), sep = ' - ') %>%
#merge statefips labels by st_abbr to get fips codes and CPS estimated urates
left_join(cps_div_urates) %>%
#get ratio of (6-month state avg:subgroup) unemployment rate
#NOTE: due to small sample sizes, occasionally subgroups show an unemployment rate of 0%
#Using ifelse() fcuntion, I avoid using these 0 values as a divisor.
mutate(ratio = ifelse(subgroup_urate==0, NA, subgroup_urate/div_urate_6mos)) %>%
arrange(div_label, desc(n)) %>%
#bind US unemployment rates
bind_rows(us_subgroup_urates)# %>%
View(all_subgroup_urates)
all_subgroup_urates<- cps %>%
#restrict data to current quarters
filter(qtr==qtr_list[1] | qtr==qtr_list[1+1]) %>%
#create subgroup variables
mutate(divXrace = paste(div_label,'-', wbhao,'-','All'),
divXgender = paste(div_label,'-','All','-',female),
divXraceXgender = paste(div_label,'-',wbhao,'-',female)) %>%
#Estimate unemployment rates and sample sizes by subgroups
summarize_groups(div_label|divXrace|divXraceXgender|divXgender,
subgroup_urate = weighted.mean(unemp, w=basicwgt/6, na.rm=TRUE),
n=n()) %>%
#split group_value variable to create st_abbr, wbho, gender labels
separate(group_value, c('div_label','wbhao','gender'), sep = ' - ') %>%
#merge statefips labels by st_abbr to get fips codes and CPS estimated urates
left_join(cps_div_urates) %>%
#get ratio of (6-month state avg:subgroup) unemployment rate
#NOTE: due to small sample sizes, occasionally subgroups show an unemployment rate of 0%
#Using ifelse() fcuntion, I avoid using these 0 values as a divisor.
mutate(ratio = ifelse(subgroup_urate==0, NA, subgroup_urate/div_urate_6mos)) %>%
arrange(div_label, desc(n)) %>%
#bind US unemployment rates
bind_rows(us_subgroup_urates) %>%
#merge quarterly laus unemp estimates
left_join(laus_div_urates)# %>%
all_subgroup_urates<- cps %>%
#restrict data to current quarters
filter(qtr==qtr_list[1] | qtr==qtr_list[1+1]) %>%
#create subgroup variables
mutate(divXrace = paste(div_label,'-', wbhao,'-','All'),
divXgender = paste(div_label,'-','All','-',female),
divXraceXgender = paste(div_label,'-',wbhao,'-',female)) %>%
#Estimate unemployment rates and sample sizes by subgroups
summarize_groups(div_label|divXrace|divXraceXgender|divXgender,
subgroup_urate = weighted.mean(unemp, w=basicwgt/6, na.rm=TRUE),
n=n()) %>%
#split group_value variable to create st_abbr, wbho, gender labels
separate(group_value, c('div_label','wbhao','gender'), sep = ' - ') %>%
#merge statefips labels by st_abbr to get fips codes and CPS estimated urates
left_join(cps_div_urates) %>%
#get ratio of (6-month state avg:subgroup) unemployment rate
#NOTE: due to small sample sizes, occasionally subgroups show an unemployment rate of 0%
#Using ifelse() fcuntion, I avoid using these 0 values as a divisor.
mutate(ratio = ifelse(subgroup_urate==0, NA, subgroup_urate/div_urate_6mos)) %>%
arrange(div_label, desc(n)) %>%
#bind US unemployment rates
bind_rows(us_subgroup_urates) %>%
#merge quarterly laus unemp estimates
left_join(laus_div_urates) %>%
mutate(qtr_div_urate_by_reg = ratio * laus_qtr_unemp,
se = ifelse(subgroup_urate==0, NA, sqrt(subgroup_urate*(1-subgroup_urate)/n)),
cv = ifelse(subgroup_urate==0, NA, se / subgroup_urate)) %>%
# replace all values with a coefficient of variation below threshold to NA
mutate(thresh.10 = replace(qtr_div_urate_by_reg, cv>.10, NA),
thresh.15 = replace(qtr_div_urate_by_reg, cv>.15, NA),
thresh.20 = replace(qtr_div_urate_by_reg, cv>.20, NA),
thresh.25 = replace(qtr_div_urate_by_reg, cv>.25, NA)) %>%
left_join(geographic_labels)# %>%
all_subgroup_urates<- cps %>%
#restrict data to current quarters
filter(qtr==qtr_list[1] | qtr==qtr_list[1+1]) %>%
#create subgroup variables
mutate(divXrace = paste(div_label,'-', wbhao,'-','All'),
divXgender = paste(div_label,'-','All','-',female),
divXraceXgender = paste(div_label,'-',wbhao,'-',female)) %>%
#Estimate unemployment rates and sample sizes by subgroups
summarize_groups(div_label|divXrace|divXraceXgender|divXgender,
subgroup_urate = weighted.mean(unemp, w=basicwgt/6, na.rm=TRUE),
n=n()) %>%
#split group_value variable to create st_abbr, wbho, gender labels
separate(group_value, c('div_label','wbhao','gender'), sep = ' - ') %>%
#merge statefips labels by st_abbr to get fips codes and CPS estimated urates
left_join(cps_div_urates) %>%
#get ratio of (6-month state avg:subgroup) unemployment rate
#NOTE: due to small sample sizes, occasionally subgroups show an unemployment rate of 0%
#Using ifelse() fcuntion, I avoid using these 0 values as a divisor.
mutate(ratio = ifelse(subgroup_urate==0, NA, subgroup_urate/div_urate_6mos)) %>%
arrange(div_label, desc(n)) %>%
#bind US unemployment rates
bind_rows(us_subgroup_urates) %>%
#merge quarterly laus unemp estimates
left_join(laus_div_urates) %>%
mutate(qtr_div_urate_by_reg = ratio * laus_qtr_unemp,
se = ifelse(subgroup_urate==0, NA, sqrt(subgroup_urate*(1-subgroup_urate)/n)),
cv = ifelse(subgroup_urate==0, NA, se / subgroup_urate)) %>%
# replace all values with a coefficient of variation below threshold to NA
mutate(thresh.10 = replace(qtr_div_urate_by_reg, cv>.10, NA),
thresh.15 = replace(qtr_div_urate_by_reg, cv>.15, NA),
thresh.20 = replace(qtr_div_urate_by_reg, cv>.20, NA),
thresh.25 = replace(qtr_div_urate_by_reg, cv>.25, NA)) %>%
select(div_label, gender, wbhao, n, subgroup_urate,
div_urate_6mos, ratio, laus_qtr_unemp, qtr_div_urate_by_reg,
se, cv, thresh.10:thresh.25)# %>% # Clean our data up
#empty lists to store dfs
div_dfs <- list()
division_analysis <- function(quarters){
for(i in 1:length(qtr_list)){
laus_div_urates <- laus %>%
filter(qtr==qtr_list[i+1]) %>%
group_by(div_label) %>%
summarize(laus_qtr_unemp = mean(urate))
cps_div_urates <- cps %>%
filter(qtr==qtr_list[i] | qtr == qtr_list[i+1]) %>%
group_by(div_label) %>%
summarize(div_urate_6mos = weighted.mean(unemp, w=basicwgt/6, na.rm=TRUE))
us_subgroup_urates <- cps %>%
filter(qtr==qtr_list[i] | qtr==qtr_list[i+1]) %>%
mutate(overall= paste('US','-','All','-','All'),
gender = paste('US','-','All','-',female),
race = paste('US','-',wbhao,'-','All'),
genderXrace = paste('US','-',wbhao,'-',female)) %>%
summarize_groups(overall|race|gender|genderXrace,
subgroup_urate = weighted.mean(unemp, w=basicwgt/6, na.rm=TRUE),
n=n()) %>%
separate(group_value, c('div_label','wbhao','gender'), sep= ' - ') %>% #creates st_abbr, wbho, gender variables
mutate(across(wbhao|gender, ~ str_squish(.x)),
div_urate_6mos = subgroup_urate[1],
div_label = "US",
ratio = ifelse(subgroup_urate==0, NA, subgroup_urate/div_urate_6mos))
print(paste("Calculating subgroup urates for: ", qtr_list[i+1]))
all_subgroup_urates<- cps %>%
#restrict data to current quarters
filter(qtr==qtr_list[i] | qtr==qtr_list[i+1]) %>%
#create subgroup variables
mutate(divXrace = paste(div_label,'-', wbhao,'-','All'),
divXgender = paste(div_label,'-','All','-',female),
divXraceXgender = paste(div_label,'-',wbhao,'-',female)) %>%
#Estimate unemployment rates and sample sizes by subgroups
summarize_groups(div_label|divXrace|divXraceXgender|divXgender,
subgroup_urate = weighted.mean(unemp, w=basicwgt/6, na.rm=TRUE),
n=n()) %>%
#split group_value variable to create st_abbr, wbho, gender labels
separate(group_value, c('div_label','wbhao','gender'), sep = ' - ') %>%
#merge statefips labels by st_abbr to get fips codes and CPS estimated urates
left_join(cps_div_urates) %>%
#get ratio of (6-month state avg:subgroup) unemployment rate
#NOTE: due to small sample sizes, occasionally subgroups show an unemployment rate of 0%
#Using ifelse() fcuntion, I avoid using these 0 values as a divisor.
mutate(ratio = ifelse(subgroup_urate==0, NA, subgroup_urate/div_urate_6mos)) %>%
arrange(div_label, desc(n)) %>%
#bind US unemployment rates
bind_rows(us_subgroup_urates) %>%
#merge quarterly laus unemp estimates
left_join(laus_div_urates) %>%
mutate(qtr_div_urate_by_reg = ratio * laus_qtr_unemp,
se = ifelse(subgroup_urate==0, NA, sqrt(subgroup_urate*(1-subgroup_urate)/n)),
cv = ifelse(subgroup_urate==0, NA, se / subgroup_urate)) %>%
# replace all values with a coefficient of variation below threshold to NA
mutate(thresh.10 = replace(qtr_div_urate_by_reg, cv>.10, NA),
thresh.15 = replace(qtr_div_urate_by_reg, cv>.15, NA),
thresh.20 = replace(qtr_div_urate_by_reg, cv>.20, NA),
thresh.25 = replace(qtr_div_urate_by_reg, cv>.25, NA)) %>%
select(div_label, gender, wbhao, n, subgroup_urate,
div_urate_6mos, ratio, laus_qtr_unemp, qtr_div_urate_by_reg,
se, cv, thresh.10:thresh.25) %>% # Clean our data up
mutate(grp_qtrs = paste(qtr_list[i],'+',qtr_list[i+1]),
qtr = paste(qtr_list[i+1])) %>%
filter(wbhao!='Other')
div_dfs[[i]] <- all_subgroup_urates # save your dataframes into the list
}
return(div_dfs)
}
#Same as above, except using divisions instead of states
my_div_dfs <- division_analysis(qtr_list)
all_qtrs_div <- bind_rows(my_div_dfs)
div_urates <- all_qtrs_div %>%
filter(gender == 'All', wbhao!='All') %>%
select(qtr, div_label, wbhao, qtr_div_urate_by_reg) %>%
arrange(wbhao) %>%
pivot_wider(id_cols = c(qtr), names_from = c(div_label, wbhao), values_from = qtr_div_urate_by_reg)# %>%
View(div_urates)
div_urates <- all_qtrs_div %>%
filter(gender == 'All', wbhao!='All') %>%
select(qtr, div_label, wbhao, qtr_div_urate_by_reg, thresh.10:thresh.25)# %>%
unsupressed_by_div <- all_qtrs_div %>%
filter(gender == 'All', wbhao!='All', div_label!='US') %>%
select(qtr, div_label, wbhao, thresh.10:thresh.25) %>%
pivot_longer(cols = c(thresh.10:thresh.25), names_to = "threshold", values_to = 'urates') %>%
group_by(wbhao, div_label, threshold) %>%
summarize(supressed = sum(!is.na(urates))) %>%
pivot_wider(id_cols = c(div_label), names_from = c(wbhao,threshold), values_from = supressed) %>%
write_csv(here(paste0("data/39qtr_unsuppressed_div_urates_", format(Sys.time(), "%d-%b-%Y %H.%M"), ".csv")))
View(unsupressed_by_div)
div_urates <- all_qtrs_div %>%
filter(gender == 'All', wbhao!='All') %>%
select(qtr, div_label, wbhao, qtr_div_urate_by_reg, thresh.10:thresh.25) %>%
arrange(wbhao) %>%
pivot_wider(id_cols = c(qtr), names_from = c(div_label, wbhao), values_from = qtr_div_urate_by_reg) %>%
filter(qtr!='NA')# %>%
div_urates <- all_qtrs_div %>%
filter(gender == 'All', wbhao!='All') %>%
select(qtr, div_label, wbhao, qtr_div_urate_by_reg, thresh.10:thresh.25) %>%
arrange(wbhao) %>%
pivot_wider(id_cols = c(qtr), names_from = c(div_label, wbhao), values_from = qtr_div_urate_by_reg) %>%
filter(qtr!='NA') %>%
write_csv(here(paste0('data/division_urates_',format(Sys.time(), "%d-%b-%Y %H.%M"),'.csv')))
div_urates_all <- all_qtrs_div %>%
filter(gender == 'All', wbhao!='All') %>%
select(qtr, div_label, wbhao, qtr_div_urate_by_reg, thresh.10:thresh.25) %>%
arrange(wbhao) %>%
pivot_wider(id_cols = c(qtr), names_from = c(div_label, wbhao), values_from = thresh.10) %>%
filter(qtr!='NA')# %>%
div_urates_thresh10 <- all_qtrs_div %>%
filter(gender == 'All', wbhao!='All') %>%
select(qtr, div_label, wbhao, qtr_div_urate_by_reg, thresh.10:thresh.25) %>%
arrange(wbhao) %>%
pivot_wider(id_cols = c(qtr), names_from = c(div_label, wbhao), values_from = thresh.10) %>%
filter(qtr!='NA')# %>%
View(div_urates_thresh10)
View(all_subgroup_urates)
